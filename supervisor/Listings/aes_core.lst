


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 PRESERVE8
    3 00000000                 THUMB
    4 00000000                 AREA             |.text|, CODE, READONLY
    5 00000000         
    6 00000000         aes_core_asm
                               PROC
    7 00000000                 EXPORT           aes_core_asm
    8 00000000                 IMPORT           Te
    9 00000000         
   10 00000000         ;32: void aes_core(unsigned int r,word32 s[4],const word
                       32*rk){ 
   11 00000000         ;37:      
   12 00000000         ;38:         word32 t0, t1, t2, t3; 
   13 00000000         ;39:          
   14 00000000 B5F7            PUSH             {r0-r2,r4-r7,lr}
   15 00000002 B082            SUB              sp,sp,#0x08
   16 00000004         ;40:                 s[0] ^= rk[0]; 
   17 00000004 680C            LDR              r4,[r1,#0x00]
   18 00000006 6815            LDR              r5,[r2,#0x00]
   19 00000008 406C            EORS             r4,r4,r5
   20 0000000A 600C            STR              r4,[r1,#0x00]
   21 0000000C         ;41:     s[1] ^= rk[1]; 
   22 0000000C 684C            LDR              r4,[r1,#0x04]
   23 0000000E 6855            LDR              r5,[r2,#0x04]
   24 00000010 406C            EORS             r4,r4,r5
   25 00000012 604C            STR              r4,[r1,#0x04]
   26 00000014         ;42:     s[2] ^= rk[2]; 
   27 00000014 688C            LDR              r4,[r1,#0x08]
   28 00000016 6895            LDR              r5,[r2,#0x08]
   29 00000018 406C            EORS             r4,r4,r5
   30 0000001A 608C            STR              r4,[r1,#0x08]
   31 0000001C         ;43:     s[3] ^= rk[3]; 
   32 0000001C         ;44:          
   33 0000001C 68CC            LDR              r4,[r1,#0x0C]
   34 0000001E 68D5            LDR              r5,[r2,#0x0C]
   35 00000020 406C            EORS             r4,r4,r5
   36 00000022 60CC            STR              r4,[r1,#0x0C]
   37 00000024         ;45:     for (;;) { 
   38 00000024         odd_round
   39 00000024         
   40 00000024 BF00            NOP
   41 00000026         ;46:         t0 = 
   42 00000026         ;47:             Te[0][GETBYTE(s[0], 3)]  ^ 
   43 00000026         ;48:             Te[1][GETBYTE(s[1], 2)]  ^ 
   44 00000026         ;49:             Te[2][GETBYTE(s[2], 1)]  ^ 
   45 00000026         ;50:             Te[3][GETBYTE(s[3], 0)]  ^ 
   46 00000026         ;51:             rk[4]; 
   47 00000026 680C            LDR              r4,[r1,#0x00]
   48 00000028 0E24            LSRS             r4,r4,#24
   49 0000002A 00A4            LSLS             r4,r4,#2
   50 0000002C         ;                LDR      r5,[pc,#704]  ; @0x000016B0//T
                       e[0]
   51 0000002C 4DB5            LDR              r5,=Te+0*256*4
   52 0000002E 592C            LDR              r4,[r5,r4]
   53 00000030 684D            LDR              r5,[r1,#0x04]
   54 00000032 022D            LSLS             r5,r5,#8
   55 00000034 0E2D            LSRS             r5,r5,#24
   56 00000036 00AD            LSLS             r5,r5,#2



ARM Macro Assembler    Page 2 


   57 00000038         ;                LDR      r6,[pc,#696]  ; @0x000016B4//T
                       e[1]
   58 00000038 4EB3            LDR              r6,=Te+1*256*4
   59 0000003A 5975            LDR              r5,[r6,r5]
   60 0000003C 406C            EORS             r4,r4,r5
   61 0000003E 890D            LDRH             r5,[r1,#0x08]
   62 00000040 042D            LSLS             r5,r5,#16
   63 00000042 0E2D            LSRS             r5,r5,#24
   64 00000044 00AD            LSLS             r5,r5,#2
   65 00000046         ;                LDR      r6,[pc,#688]  ; @0x000016B8//T
                       e[2]
   66 00000046 4EB1            LDR              r6,=Te+2*256*4
   67 00000048 5975            LDR              r5,[r6,r5]
   68 0000004A 406C            EORS             r4,r4,r5
   69 0000004C 7B0D            LDRB             r5,[r1,#0x0C]
   70 0000004E 00AD            LSLS             r5,r5,#2
   71 00000050         ;                LDR      r6,[pc,#680]  ; @0x000016BC//T
                       e[3]
   72 00000050 4EAF            LDR              r6,=Te+3*256*4
   73 00000052 5975            LDR              r5,[r6,r5]
   74 00000054 406C            EORS             r4,r4,r5
   75 00000056 4620            MOV              r0,r4
   76 00000058 6915            LDR              r5,[r2,#0x10]
   77 0000005A 4068            EORS             r0,r0,r5
   78 0000005C         ;52:         t1 = 
   79 0000005C         ;53:             Te[0][GETBYTE(s[1], 3)]  ^ 
   80 0000005C         ;54:             Te[1][GETBYTE(s[2], 2)]  ^ 
   81 0000005C         ;55:             Te[2][GETBYTE(s[3], 1)]  ^ 
   82 0000005C         ;56:             Te[3][GETBYTE(s[0], 0)]  ^ 
   83 0000005C         ;57:             rk[5]; 
   84 0000005C 684C            LDR              r4,[r1,#0x04]
   85 0000005E 0E24            LSRS             r4,r4,#24
   86 00000060 00A4            LSLS             r4,r4,#2
   87 00000062         ;                LDR      r5,[pc,#652]  ; @0x000016B0
   88 00000062 4DA8            LDR              r5,=Te+0*256*4
   89 00000064 592C            LDR              r4,[r5,r4]
   90 00000066 688D            LDR              r5,[r1,#0x08]
   91 00000068 022D            LSLS             r5,r5,#8
   92 0000006A 0E2D            LSRS             r5,r5,#24
   93 0000006C 00AD            LSLS             r5,r5,#2
   94 0000006E         ;                LDR      r6,[pc,#644]  ; @0x000016B4
   95 0000006E 4EA6            LDR              r6,=Te+1*256*4
   96 00000070 5975            LDR              r5,[r6,r5]
   97 00000072 406C            EORS             r4,r4,r5
   98 00000074 898D            LDRH             r5,[r1,#0x0C]
   99 00000076 042D            LSLS             r5,r5,#16
  100 00000078 0E2D            LSRS             r5,r5,#24
  101 0000007A 00AD            LSLS             r5,r5,#2
  102 0000007C         ;                LDR      r6,[pc,#632]  ; @0x000016B8
  103 0000007C 4EA3            LDR              r6,=Te+2*256*4
  104 0000007E 5975            LDR              r5,[r6,r5]
  105 00000080 406C            EORS             r4,r4,r5
  106 00000082 780D            LDRB             r5,[r1,#0x00]
  107 00000084 00AD            LSLS             r5,r5,#2
  108 00000086         ;                LDR      r6,[pc,#628]  ; @0x000016BC
  109 00000086 4EA2            LDR              r6,=Te+3*256*4
  110 00000088 5975            LDR              r5,[r6,r5]
  111 0000008A 406C            EORS             r4,r4,r5
  112 0000008C 4623            MOV              r3,r4



ARM Macro Assembler    Page 3 


  113 0000008E 6955            LDR              r5,[r2,#0x14]
  114 00000090 406B            EORS             r3,r3,r5
  115 00000092         ;58:         t2 = 
  116 00000092         ;59:             Te[0][GETBYTE(s[2], 3)] ^ 
  117 00000092         ;60:             Te[1][GETBYTE(s[3], 2)]  ^ 
  118 00000092         ;61:             Te[2][GETBYTE(s[0], 1)]  ^ 
  119 00000092         ;62:             Te[3][GETBYTE(s[1], 0)]  ^ 
  120 00000092         ;63:             rk[6]; 
  121 00000092 688C            LDR              r4,[r1,#0x08]
  122 00000094 0E24            LSRS             r4,r4,#24
  123 00000096 00A4            LSLS             r4,r4,#2
  124 00000098         ;                LDR      r5,[pc,#596]  ; @0x000016B0
  125 00000098 4D9A            LDR              r5,=Te+0*256*4
  126 0000009A 592C            LDR              r4,[r5,r4]
  127 0000009C 68CD            LDR              r5,[r1,#0x0C]
  128 0000009E 022D            LSLS             r5,r5,#8
  129 000000A0 0E2D            LSRS             r5,r5,#24
  130 000000A2 00AD            LSLS             r5,r5,#2
  131 000000A4         ;                LDR      r6,[pc,#588]  ; @0x000016B4
  132 000000A4 4E98            LDR              r6,=Te+1*256*4
  133 000000A6 5975            LDR              r5,[r6,r5]
  134 000000A8 406C            EORS             r4,r4,r5
  135 000000AA 880D            LDRH             r5,[r1,#0x00]
  136 000000AC 042D            LSLS             r5,r5,#16
  137 000000AE 0E2D            LSRS             r5,r5,#24
  138 000000B0 00AD            LSLS             r5,r5,#2
  139 000000B2         ;                LDR      r6,[pc,#580]  ; @0x000016B8
  140 000000B2 4E96            LDR              r6,=Te+2*256*4
  141 000000B4 5975            LDR              r5,[r6,r5]
  142 000000B6 406C            EORS             r4,r4,r5
  143 000000B8 790D            LDRB             r5,[r1,#0x04]
  144 000000BA 00AD            LSLS             r5,r5,#2
  145 000000BC         ;                LDR      r6,[pc,#572]  ; @0x000016BC
  146 000000BC 4E94            LDR              r6,=Te+3*256*4
  147 000000BE 5975            LDR              r5,[r6,r5]
  148 000000C0 406C            EORS             r4,r4,r5
  149 000000C2 6995            LDR              r5,[r2,#0x18]
  150 000000C4 406C            EORS             r4,r4,r5
  151 000000C6 9401            STR              r4,[sp,#0x04]
  152 000000C8         ;64:         t3 = 
  153 000000C8         ;65:             Te[0][GETBYTE(s[3], 3)] ^ 
  154 000000C8         ;66:             Te[1][GETBYTE(s[0], 2)]  ^ 
  155 000000C8         ;67:             Te[2][GETBYTE(s[1], 1)]  ^ 
  156 000000C8         ;68:             Te[3][GETBYTE(s[2], 0)]  ^ 
  157 000000C8         ;69:             rk[7]; 
  158 000000C8         ;70:  
  159 000000C8 68CC            LDR              r4,[r1,#0x0C]
  160 000000CA 0E24            LSRS             r4,r4,#24
  161 000000CC 00A4            LSLS             r4,r4,#2
  162 000000CE         ;                LDR      r5,[pc,#544]  ; @0x000016B0
  163 000000CE 4D8D            LDR              r5,=Te+0*256*4
  164 000000D0 592C            LDR              r4,[r5,r4]
  165 000000D2 680D            LDR              r5,[r1,#0x00]
  166 000000D4 022D            LSLS             r5,r5,#8
  167 000000D6 0E2D            LSRS             r5,r5,#24
  168 000000D8 00AD            LSLS             r5,r5,#2
  169 000000DA         ;                LDR      r6,[pc,#536]  ; @0x000016B4
  170 000000DA 4E8B            LDR              r6,=Te+1*256*4
  171 000000DC 5975            LDR              r5,[r6,r5]



ARM Macro Assembler    Page 4 


  172 000000DE 406C            EORS             r4,r4,r5
  173 000000E0 888D            LDRH             r5,[r1,#0x04]
  174 000000E2 042D            LSLS             r5,r5,#16
  175 000000E4 0E2D            LSRS             r5,r5,#24
  176 000000E6 00AD            LSLS             r5,r5,#2
  177 000000E8         ;                LDR      r6,[pc,#524]  ; @0x000016B8
  178 000000E8 4E88            LDR              r6,=Te+2*256*4
  179 000000EA 5975            LDR              r5,[r6,r5]
  180 000000EC 406C            EORS             r4,r4,r5
  181 000000EE 7A0D            LDRB             r5,[r1,#0x08]
  182 000000F0 00AD            LSLS             r5,r5,#2
  183 000000F2         ;                LDR      r6,[pc,#520]  ; @0x000016BC
  184 000000F2 4E87            LDR              r6,=Te+3*256*4
  185 000000F4 5975            LDR              r5,[r6,r5]
  186 000000F6 406C            EORS             r4,r4,r5
  187 000000F8 69D5            LDR              r5,[r2,#0x1C]
  188 000000FA 406C            EORS             r4,r4,r5
  189 000000FC 9400            STR              r4,[sp,#0x00]
  190 000000FE         ;71:         rk += 8; 
  191 000000FE 3220            ADDS             r2,r2,#0x20
  192 00000100         ;72:         if (--r == 0) { 
  193 00000100 9C02            LDR              r4,[sp,#0x08]
  194 00000102 1E64            SUBS             r4,r4,#1
  195 00000104 9402            STR              r4,[sp,#0x08]
  196 00000106 2C00            CMP              r4,#0x00
  197 00000108 D100            BNE              even_round
  198 0000010A         ;73:             break; 
  199 0000010A         ;74:         } 
  200 0000010A         ;75:  
  201 0000010A E069            B                final_round
  202 0000010C         even_round
  203 0000010C         ;76:         s[0] = 
  204 0000010C         ;77:             Te[0][GETBYTE(t0, 3)] ^ 
  205 0000010C         ;78:             Te[1][GETBYTE(t1, 2)] ^ 
  206 0000010C         ;79:             Te[2][GETBYTE(t2, 1)] ^ 
  207 0000010C         ;80:             Te[3][GETBYTE(t3, 0)] ^ 
  208 0000010C         ;81:             rk[0]; 
  209 0000010C 0E04            LSRS             r4,r0,#24
  210 0000010E 00A4            LSLS             r4,r4,#2
  211 00000110         ;                LDR      r5,[pc,#476]  ; @0x000016B0
  212 00000110 4D7C            LDR              r5,=Te+0*256*4
  213 00000112 592C            LDR              r4,[r5,r4]
  214 00000114 021D            LSLS             r5,r3,#8
  215 00000116 0E2D            LSRS             r5,r5,#24
  216 00000118 00AD            LSLS             r5,r5,#2
  217 0000011A         ;                LDR      r6,[pc,#472]  ; @0x000016B4
  218 0000011A 4E7B            LDR              r6,=Te+1*256*4
  219 0000011C 5975            LDR              r5,[r6,r5]
  220 0000011E 406C            EORS             r4,r4,r5
  221 00000120 9D01            LDR              r5,[sp,#0x04]
  222 00000122 042D            LSLS             r5,r5,#16
  223 00000124 0E2D            LSRS             r5,r5,#24
  224 00000126 00AD            LSLS             r5,r5,#2
  225 00000128         ;                LDR      r6,[pc,#460]  ; @0x000016B8
  226 00000128 4E78            LDR              r6,=Te+2*256*4
  227 0000012A 5975            LDR              r5,[r6,r5]
  228 0000012C 406C            EORS             r4,r4,r5
  229 0000012E 9D00            LDR              r5,[sp,#0x00]
  230 00000130 062D            LSLS             r5,r5,#24



ARM Macro Assembler    Page 5 


  231 00000132 0DAD            LSRS             r5,r5,#22
  232 00000134         ;                LDR      r6,[pc,#452]  ; @0x000016BC
  233 00000134 4E76            LDR              r6,=Te+3*256*4
  234 00000136 5975            LDR              r5,[r6,r5]
  235 00000138 406C            EORS             r4,r4,r5
  236 0000013A 6815            LDR              r5,[r2,#0x00]
  237 0000013C 406C            EORS             r4,r4,r5
  238 0000013E 600C            STR              r4,[r1,#0x00]
  239 00000140         ;82:         s[1] = 
  240 00000140         ;83:             Te[0][GETBYTE(t1, 3)] ^ 
  241 00000140         ;84:             Te[1][GETBYTE(t2, 2)] ^ 
  242 00000140         ;85:             Te[2][GETBYTE(t3, 1)] ^ 
  243 00000140         ;86:             Te[3][GETBYTE(t0, 0)] ^ 
  244 00000140         ;87:             rk[1]; 
  245 00000140 0E1C            LSRS             r4,r3,#24
  246 00000142 00A4            LSLS             r4,r4,#2
  247 00000144         ;                LDR      r5,[pc,#424]  ; @0x000016B0
  248 00000144 4D6F            LDR              r5,=Te+0*256*4
  249 00000146 592C            LDR              r4,[r5,r4]
  250 00000148 9D01            LDR              r5,[sp,#0x04]
  251 0000014A 022D            LSLS             r5,r5,#8
  252 0000014C 0E2D            LSRS             r5,r5,#24
  253 0000014E 00AD            LSLS             r5,r5,#2
  254 00000150         ;                LDR      r6,[pc,#416]  ; @0x000016B4
  255 00000150 4E6D            LDR              r6,=Te+1*256*4
  256 00000152 5975            LDR              r5,[r6,r5]
  257 00000154 406C            EORS             r4,r4,r5
  258 00000156 9D00            LDR              r5,[sp,#0x00]
  259 00000158 042D            LSLS             r5,r5,#16
  260 0000015A 0E2D            LSRS             r5,r5,#24
  261 0000015C 00AD            LSLS             r5,r5,#2
  262 0000015E         ;                LDR      r6,[pc,#408]  ; @0x000016B8
  263 0000015E 4E6B            LDR              r6,=Te+2*256*4
  264 00000160 5975            LDR              r5,[r6,r5]
  265 00000162 406C            EORS             r4,r4,r5
  266 00000164 0605            LSLS             r5,r0,#24
  267 00000166 0DAD            LSRS             r5,r5,#22
  268 00000168         ;                LDR      r6,[pc,#400]  ; @0x000016BC
  269 00000168 4E69            LDR              r6,=Te+3*256*4
  270 0000016A 5975            LDR              r5,[r6,r5]
  271 0000016C 406C            EORS             r4,r4,r5
  272 0000016E 6855            LDR              r5,[r2,#0x04]
  273 00000170 406C            EORS             r4,r4,r5
  274 00000172 604C            STR              r4,[r1,#0x04]
  275 00000174         ;88:         s[2] = 
  276 00000174         ;89:             Te[0][GETBYTE(t2, 3)] ^ 
  277 00000174         ;90:             Te[1][GETBYTE(t3, 2)] ^ 
  278 00000174         ;91:             Te[2][GETBYTE(t0, 1)] ^ 
  279 00000174         ;92:             Te[3][GETBYTE(t1, 0)] ^ 
  280 00000174         ;93:             rk[2]; 
  281 00000174 9C01            LDR              r4,[sp,#0x04]
  282 00000176 0E24            LSRS             r4,r4,#24
  283 00000178 00A4            LSLS             r4,r4,#2
  284 0000017A         ;                LDR      r5,[pc,#372]  ; @0x000016B0
  285 0000017A 4D62            LDR              r5,=Te+0*256*4
  286 0000017C 592C            LDR              r4,[r5,r4]
  287 0000017E 9D00            LDR              r5,[sp,#0x00]
  288 00000180 022D            LSLS             r5,r5,#8
  289 00000182 0E2D            LSRS             r5,r5,#24



ARM Macro Assembler    Page 6 


  290 00000184 00AD            LSLS             r5,r5,#2
  291 00000186         ;                LDR      r6,[pc,#364]  ; @0x000016B4
  292 00000186 4E60            LDR              r6,=Te+1*256*4
  293 00000188 5975            LDR              r5,[r6,r5]
  294 0000018A 406C            EORS             r4,r4,r5
  295 0000018C 0405            LSLS             r5,r0,#16
  296 0000018E 0E2D            LSRS             r5,r5,#24
  297 00000190 00AD            LSLS             r5,r5,#2
  298 00000192         ;                LDR      r6,[pc,#356]  ; @0x000016B8
  299 00000192 4E5E            LDR              r6,=Te+2*256*4
  300 00000194 5975            LDR              r5,[r6,r5]
  301 00000196 406C            EORS             r4,r4,r5
  302 00000198 061D            LSLS             r5,r3,#24
  303 0000019A 0DAD            LSRS             r5,r5,#22
  304 0000019C         ;                LDR      r6,[pc,#348]  ; @0x000016BC
  305 0000019C 4E5C            LDR              r6,=Te+3*256*4
  306 0000019E 5975            LDR              r5,[r6,r5]
  307 000001A0 406C            EORS             r4,r4,r5
  308 000001A2 6895            LDR              r5,[r2,#0x08]
  309 000001A4 406C            EORS             r4,r4,r5
  310 000001A6 608C            STR              r4,[r1,#0x08]
  311 000001A8         ;94:         s[3] = 
  312 000001A8         ;95:             Te[0][GETBYTE(t3, 3)] ^ 
  313 000001A8         ;96:             Te[1][GETBYTE(t0, 2)] ^ 
  314 000001A8         ;97:             Te[2][GETBYTE(t1, 1)] ^ 
  315 000001A8         ;98:             Te[3][GETBYTE(t2, 0)] ^ 
  316 000001A8         ;99:             rk[3]; 
  317 000001A8         ;00:     } 
  318 000001A8         ;01:                  
  319 000001A8         ;02:                     /* 
  320 000001A8         ;03:      * apply last round and 
  321 000001A8         ;04:      * map cipher state to byte array block: 
  322 000001A8         ;05:      */ 
  323 000001A8         ;06:  
  324 000001A8 9C00            LDR              r4,[sp,#0x00]
  325 000001AA 0E24            LSRS             r4,r4,#24
  326 000001AC 00A4            LSLS             r4,r4,#2
  327 000001AE         ;                LDR      r5,[pc,#320]  ; @0x000016B0
  328 000001AE 4D55            LDR              r5,=Te+0*256*4
  329 000001B0 592C            LDR              r4,[r5,r4]
  330 000001B2 0205            LSLS             r5,r0,#8
  331 000001B4 0E2D            LSRS             r5,r5,#24
  332 000001B6 00AD            LSLS             r5,r5,#2
  333 000001B8         ;                LDR      r6,[pc,#312]  ; @0x000016B4
  334 000001B8 4E53            LDR              r6,=Te+1*256*4
  335 000001BA 5975            LDR              r5,[r6,r5]
  336 000001BC 406C            EORS             r4,r4,r5
  337 000001BE 041D            LSLS             r5,r3,#16
  338 000001C0 0E2D            LSRS             r5,r5,#24
  339 000001C2 00AD            LSLS             r5,r5,#2
  340 000001C4         ;                LDR      r6,[pc,#304]  ; @0x000016B8
  341 000001C4 4E51            LDR              r6,=Te+2*256*4
  342 000001C6 5975            LDR              r5,[r6,r5]
  343 000001C8 406C            EORS             r4,r4,r5
  344 000001CA 9D01            LDR              r5,[sp,#0x04]
  345 000001CC 062D            LSLS             r5,r5,#24
  346 000001CE 0DAD            LSRS             r5,r5,#22
  347 000001D0         ;                LDR      r6,[pc,#296]  ; @0x000016BC
  348 000001D0 4E4F            LDR              r6,=Te+3*256*4



ARM Macro Assembler    Page 7 


  349 000001D2 5975            LDR              r5,[r6,r5]
  350 000001D4 406C            EORS             r4,r4,r5
  351 000001D6 68D5            LDR              r5,[r2,#0x0C]
  352 000001D8 406C            EORS             r4,r4,r5
  353 000001DA 60CC            STR              r4,[r1,#0x0C]
  354 000001DC E722            B                odd_round
  355 000001DE BF00            NOP
  356 000001E0         final_round
  357 000001E0         ;07:     s[0] = 
  358 000001E0         ;08:         (Te[4][GETBYTE(t0, 3)] & 0xff000000) ^ 
  359 000001E0         ;09:         (Te[4][GETBYTE(t1, 2)] & 0x00ff0000) ^ 
  360 000001E0         ;10:         (Te[4][GETBYTE(t2, 1)] & 0x0000ff00) ^ 
  361 000001E0         ;11:         (Te[4][GETBYTE(t3, 0)] & 0x000000ff) ^ 
  362 000001E0         ;12:         rk[0]; 
  363 000001E0 0E04            LSRS             r4,r0,#24
  364 000001E2 00A4            LSLS             r4,r4,#2
  365 000001E4         ;                LDR      r5,[pc,#280]  ; @0x000016C0
  366 000001E4 4D4B            LDR              r5,=Te+4*256*4
  367 000001E6 592C            LDR              r4,[r5,r4]
  368 000001E8 0E24            LSRS             r4,r4,#24
  369 000001EA 0624            LSLS             r4,r4,#24
  370 000001EC 021D            LSLS             r5,r3,#8
  371 000001EE 0E2D            LSRS             r5,r5,#24
  372 000001F0 00AD            LSLS             r5,r5,#2
  373 000001F2         ;                LDR      r6,[pc,#268]  ; @0x000016C0
  374 000001F2 4E48            LDR              r6,=Te+4*256*4
  375 000001F4 5975            LDR              r5,[r6,r5]
  376 000001F6 26FF            MOVS             r6,#0xFF
  377 000001F8 0436            LSLS             r6,r6,#16
  378 000001FA 4035            ANDS             r5,r5,r6
  379 000001FC 406C            EORS             r4,r4,r5
  380 000001FE 9D01            LDR              r5,[sp,#0x04]
  381 00000200 042D            LSLS             r5,r5,#16
  382 00000202 0E2D            LSRS             r5,r5,#24
  383 00000204 00AD            LSLS             r5,r5,#2
  384 00000206         ;                LDR      r6,[pc,#248]  ; @0x000016C0
  385 00000206 4E43            LDR              r6,=Te+4*256*4
  386 00000208 5975            LDR              r5,[r6,r5]
  387 0000020A 26FF            MOVS             r6,#0xFF
  388 0000020C 0236            LSLS             r6,r6,#8
  389 0000020E 4035            ANDS             r5,r5,r6
  390 00000210 406C            EORS             r4,r4,r5
  391 00000212 9D00            LDR              r5,[sp,#0x00]
  392 00000214 062D            LSLS             r5,r5,#24
  393 00000216 0DAD            LSRS             r5,r5,#22
  394 00000218         ;                LDR      r6,[pc,#228]  ; @0x000016C0
  395 00000218 4E3E            LDR              r6,=Te+4*256*4
  396 0000021A 5D75            LDRB             r5,[r6,r5]
  397 0000021C 406C            EORS             r4,r4,r5
  398 0000021E 6815            LDR              r5,[r2,#0x00]
  399 00000220 406C            EORS             r4,r4,r5
  400 00000222 600C            STR              r4,[r1,#0x00]
  401 00000224         ;13:     s[1] = 
  402 00000224         ;14:         (Te[4][GETBYTE(t1, 3)] & 0xff000000) ^ 
  403 00000224         ;15:         (Te[4][GETBYTE(t2, 2)] & 0x00ff0000) ^ 
  404 00000224         ;16:         (Te[4][GETBYTE(t3, 1)] & 0x0000ff00) ^ 
  405 00000224         ;17:         (Te[4][GETBYTE(t0, 0)] & 0x000000ff) ^ 
  406 00000224         ;18:         rk[1]; 
  407 00000224 0E1C            LSRS             r4,r3,#24



ARM Macro Assembler    Page 8 


  408 00000226 00A4            LSLS             r4,r4,#2
  409 00000228 4635            MOV              r5,r6
  410 0000022A 592C            LDR              r4,[r5,r4]
  411 0000022C 0E24            LSRS             r4,r4,#24
  412 0000022E 0624            LSLS             r4,r4,#24
  413 00000230 9D01            LDR              r5,[sp,#0x04]
  414 00000232 022D            LSLS             r5,r5,#8
  415 00000234 0E2D            LSRS             r5,r5,#24
  416 00000236 00AD            LSLS             r5,r5,#2
  417 00000238 5975            LDR              r5,[r6,r5]
  418 0000023A 26FF            MOVS             r6,#0xFF
  419 0000023C 0436            LSLS             r6,r6,#16
  420 0000023E 4035            ANDS             r5,r5,r6
  421 00000240 406C            EORS             r4,r4,r5
  422 00000242 9D00            LDR              r5,[sp,#0x00]
  423 00000244 042D            LSLS             r5,r5,#16
  424 00000246 0E2D            LSRS             r5,r5,#24
  425 00000248 00AD            LSLS             r5,r5,#2
  426 0000024A         ;                LDR      r6,[pc,#180]  ; @0x000016C0
  427 0000024A 4E32            LDR              r6,=Te+4*256*4
  428 0000024C 5975            LDR              r5,[r6,r5]
  429 0000024E 26FF            MOVS             r6,#0xFF
  430 00000250 0236            LSLS             r6,r6,#8
  431 00000252 4035            ANDS             r5,r5,r6
  432 00000254 406C            EORS             r4,r4,r5
  433 00000256 0605            LSLS             r5,r0,#24
  434 00000258 0DAD            LSRS             r5,r5,#22
  435 0000025A         ;                LDR      r6,[pc,#164]  ; @0x000016C0
  436 0000025A 4E2E            LDR              r6,=Te+4*256*4
  437 0000025C 5D75            LDRB             r5,[r6,r5]
  438 0000025E 406C            EORS             r4,r4,r5
  439 00000260 6855            LDR              r5,[r2,#0x04]
  440 00000262 406C            EORS             r4,r4,r5
  441 00000264 604C            STR              r4,[r1,#0x04]
  442 00000266         ;19:     s[2] = 
  443 00000266         ;20:         (Te[4][GETBYTE(t2, 3)] & 0xff000000) ^ 
  444 00000266         ;21:         (Te[4][GETBYTE(t3, 2)] & 0x00ff0000) ^ 
  445 00000266         ;22:         (Te[4][GETBYTE(t0, 1)] & 0x0000ff00) ^ 
  446 00000266         ;23:         (Te[4][GETBYTE(t1, 0)] & 0x000000ff) ^ 
  447 00000266         ;24:         rk[2]; 
  448 00000266 9C01            LDR              r4,[sp,#0x04]
  449 00000268 0E24            LSRS             r4,r4,#24
  450 0000026A 00A4            LSLS             r4,r4,#2
  451 0000026C 4635            MOV              r5,r6
  452 0000026E 592C            LDR              r4,[r5,r4]
  453 00000270 0E24            LSRS             r4,r4,#24
  454 00000272 0624            LSLS             r4,r4,#24
  455 00000274 9D00            LDR              r5,[sp,#0x00]
  456 00000276 022D            LSLS             r5,r5,#8
  457 00000278 0E2D            LSRS             r5,r5,#24
  458 0000027A 00AD            LSLS             r5,r5,#2
  459 0000027C 5975            LDR              r5,[r6,r5]
  460 0000027E 26FF            MOVS             r6,#0xFF
  461 00000280 0436            LSLS             r6,r6,#16
  462 00000282 4035            ANDS             r5,r5,r6
  463 00000284 406C            EORS             r4,r4,r5
  464 00000286 0405            LSLS             r5,r0,#16
  465 00000288 0E2D            LSRS             r5,r5,#24
  466 0000028A 00AD            LSLS             r5,r5,#2



ARM Macro Assembler    Page 9 


  467 0000028C         ;                LDR      r6,[pc,#112]  ; @0x000016C0
  468 0000028C 4E21            LDR              r6,=Te+4*256*4
  469 0000028E 5975            LDR              r5,[r6,r5]
  470 00000290 26FF            MOVS             r6,#0xFF
  471 00000292 0236            LSLS             r6,r6,#8
  472 00000294 4035            ANDS             r5,r5,r6
  473 00000296 406C            EORS             r4,r4,r5
  474 00000298 061D            LSLS             r5,r3,#24
  475 0000029A 0DAD            LSRS             r5,r5,#22
  476 0000029C         ;                LDR      r6,[pc,#96]  ; @0x000016C0
  477 0000029C 4E1D            LDR              r6,=Te+4*256*4
  478 0000029E 5D75            LDRB             r5,[r6,r5]
  479 000002A0 406C            EORS             r4,r4,r5
  480 000002A2 6895            LDR              r5,[r2,#0x08]
  481 000002A4 406C            EORS             r4,r4,r5
  482 000002A6 608C            STR              r4,[r1,#0x08]
  483 000002A8         ;25:     s[3] = 
  484 000002A8         ;26:         (Te[4][GETBYTE(t3, 3)] & 0xff000000) ^ 
  485 000002A8         ;27:         (Te[4][GETBYTE(t0, 2)] & 0x00ff0000) ^ 
  486 000002A8         ;28:         (Te[4][GETBYTE(t1, 1)] & 0x0000ff00) ^ 
  487 000002A8         ;29:         (Te[4][GETBYTE(t2, 0)] & 0x000000ff) ^ 
  488 000002A8         ;30:         rk[3]; 
  489 000002A8         ;31:  
  490 000002A8 9C00            LDR              r4,[sp,#0x00]
  491 000002AA 0E24            LSRS             r4,r4,#24
  492 000002AC 00A4            LSLS             r4,r4,#2
  493 000002AE 4635            MOV              r5,r6
  494 000002B0 592C            LDR              r4,[r5,r4]
  495 000002B2 0E24            LSRS             r4,r4,#24
  496 000002B4 0624            LSLS             r4,r4,#24
  497 000002B6 0205            LSLS             r5,r0,#8
  498 000002B8 0E2D            LSRS             r5,r5,#24
  499 000002BA 00AD            LSLS             r5,r5,#2
  500 000002BC 5975            LDR              r5,[r6,r5]
  501 000002BE 26FF            MOVS             r6,#0xFF
  502 000002C0 0436            LSLS             r6,r6,#16
  503 000002C2 4035            ANDS             r5,r5,r6
  504 000002C4 406C            EORS             r4,r4,r5
  505 000002C6 041D            LSLS             r5,r3,#16
  506 000002C8 0E2D            LSRS             r5,r5,#24
  507 000002CA 00AD            LSLS             r5,r5,#2
  508 000002CC         ;                LDR      r6,[pc,#48]  ; @0x000016C0
  509 000002CC 4E11            LDR              r6,=Te+4*256*4
  510 000002CE 5975            LDR              r5,[r6,r5]
  511 000002D0 26FF            MOVS             r6,#0xFF
  512 000002D2 0236            LSLS             r6,r6,#8
  513 000002D4 4035            ANDS             r5,r5,r6
  514 000002D6 406C            EORS             r4,r4,r5
  515 000002D8 9D01            LDR              r5,[sp,#0x04]
  516 000002DA 062D            LSLS             r5,r5,#24
  517 000002DC 0DAD            LSRS             r5,r5,#22
  518 000002DE         ;                LDR      r6,[pc,#32]  ; @0x000016C0
  519 000002DE 4E0D            LDR              r6,=Te+4*256*4
  520 000002E0 5D75            LDRB             r5,[r6,r5]
  521 000002E2 406C            EORS             r4,r4,r5
  522 000002E4 68D5            LDR              r5,[r2,#0x0C]
  523 000002E6 406C            EORS             r4,r4,r5
  524 000002E8 60CC            STR              r4,[r1,#0x0C]
  525 000002EA         ;32: } 



ARM Macro Assembler    Page 10 


  526 000002EA B005            ADD              sp,sp,#0x14
  527 000002EC BDF0            POP              {r4-r7,pc}
  528 000002EE 00 00           DCW              0x0000
  529 000002F0 CC 17           DCW              0x17CC
  530 000002F2 00 00           DCW              0x0000
  531 000002F4 CC 1B           DCW              0x1BCC
  532 000002F6 00 00           DCW              0x0000
  533 000002F8 CC 1F           DCW              0x1FCC
  534 000002FA 00 00           DCW              0x0000
  535 000002FC CC 23           DCW              0x23CC
  536 000002FE 00 00           DCW              0x0000
  537 00000300 CC 27           DCW              0x27CC
  538 00000302 00 00           DCW              0x0000
  539 00000304                 ENDP
  540 00000304         
  541 00000304 00000000 
              00000400 
              00000800 
              00000C00 
              00001000         LTORG
  542 00000318         
  543 00000318         aes_core_asm_opt
                               PROC
  544 00000318                 EXPORT           aes_core_asm_opt
  545 00000318                 IMPORT           Te
  546 00000318         
  547 00000318         ;32: void aes_core(unsigned int r,word32 s[4],const word
                       32*rk){ 
  548 00000318         ;37:      
  549 00000318         ;38:         word32 t0, t1, t2, t3; 
  550 00000318         ;39:          
  551 00000318 B5F7            PUSH             {r0-r2,r4-r7,lr}
  552 0000031A B082            SUB              sp,sp,#0x08
  553 0000031C         ;40:                 s[0] ^= rk[0]; 
  554 0000031C 680C            LDR              r4,[r1,#0x00]
  555 0000031E 6815            LDR              r5,[r2,#0x00]
  556 00000320 406C            EORS             r4,r4,r5
  557 00000322 600C            STR              r4,[r1,#0x00]
  558 00000324         ;41:     s[1] ^= rk[1]; 
  559 00000324 684C            LDR              r4,[r1,#0x04]
  560 00000326 6855            LDR              r5,[r2,#0x04]
  561 00000328 406C            EORS             r4,r4,r5
  562 0000032A 604C            STR              r4,[r1,#0x04]
  563 0000032C         ;42:     s[2] ^= rk[2]; 
  564 0000032C 688C            LDR              r4,[r1,#0x08]
  565 0000032E 6895            LDR              r5,[r2,#0x08]
  566 00000330 406C            EORS             r4,r4,r5
  567 00000332 608C            STR              r4,[r1,#0x08]
  568 00000334         ;43:     s[3] ^= rk[3]; 
  569 00000334         ;44:          
  570 00000334 68CC            LDR              r4,[r1,#0x0C]
  571 00000336 68D5            LDR              r5,[r2,#0x0C]
  572 00000338 406C            EORS             r4,r4,r5
  573 0000033A 60CC            STR              r4,[r1,#0x0C]
  574 0000033C         ;45:     for (;;) { 
  575 0000033C         odd_round2
  576 0000033C         
  577 0000033C BF00            NOP
  578 0000033E         ;46:         t0 = 



ARM Macro Assembler    Page 11 


  579 0000033E         ;47:             Te[0][GETBYTE(s[0], 3)]  ^ 
  580 0000033E         ;48:             Te[1][GETBYTE(s[1], 2)]  ^ 
  581 0000033E         ;49:             Te[2][GETBYTE(s[2], 1)]  ^ 
  582 0000033E         ;50:             Te[3][GETBYTE(s[3], 0)]  ^ 
  583 0000033E         ;51:             rk[4]; 
  584 0000033E         ;LDR      r4,[r1,#0x00]
  585 0000033E         ;LSRS     r4,r4,#24
  586 0000033E 78CC            LDRB             r4, [r1,#0x03]
  587 00000340 00A4            LSLS             r4,r4,#2
  588 00000342         ;                LDR      r5,[pc,#704]  ; @0x000016B0//T
                       e[0]
  589 00000342 4DAF            LDR              r5,=Te+0*256*4
  590 00000344 592C            LDR              r4,[r5,r4]
  591 00000346         ;LDR      r5,[r1,#0x04]
  592 00000346         ;LSLS     r5,r5,#8
  593 00000346         ;LSRS     r5,r5,#24
  594 00000346 798D            LDRB             r5,[r1,#0x06]
  595 00000348 00AD            LSLS             r5,r5,#2
  596 0000034A         ;                LDR      r6,[pc,#696]  ; @0x000016B4//T
                       e[1]
  597 0000034A 4EAE            LDR              r6,=Te+1*256*4
  598 0000034C 5975            LDR              r5,[r6,r5]
  599 0000034E 406C            EORS             r4,r4,r5
  600 00000350 890D            LDRH             r5,[r1,#0x08]
  601 00000352 042D            LSLS             r5,r5,#16
  602 00000354 0E2D            LSRS             r5,r5,#24
  603 00000356 00AD            LSLS             r5,r5,#2
  604 00000358         ;                LDR      r6,[pc,#688]  ; @0x000016B8//T
                       e[2]
  605 00000358 4EAB            LDR              r6,=Te+2*256*4
  606 0000035A 5975            LDR              r5,[r6,r5]
  607 0000035C 406C            EORS             r4,r4,r5
  608 0000035E 7B0D            LDRB             r5,[r1,#0x0C]
  609 00000360 00AD            LSLS             r5,r5,#2
  610 00000362         ;                LDR      r6,[pc,#680]  ; @0x000016BC//T
                       e[3]
  611 00000362 4EAA            LDR              r6,=Te+3*256*4
  612 00000364 5975            LDR              r5,[r6,r5]
  613 00000366 406C            EORS             r4,r4,r5
  614 00000368 4620            MOV              r0,r4
  615 0000036A 6915            LDR              r5,[r2,#0x10]
  616 0000036C 4068            EORS             r0,r0,r5
  617 0000036E         ;52:         t1 = 
  618 0000036E         ;53:             Te[0][GETBYTE(s[1], 3)]  ^ 
  619 0000036E         ;54:             Te[1][GETBYTE(s[2], 2)]  ^ 
  620 0000036E         ;55:             Te[2][GETBYTE(s[3], 1)]  ^ 
  621 0000036E         ;56:             Te[3][GETBYTE(s[0], 0)]  ^ 
  622 0000036E         ;57:             rk[5]; 
  623 0000036E 684C            LDR              r4,[r1,#0x04]
  624 00000370 0E24            LSRS             r4,r4,#24
  625 00000372 00A4            LSLS             r4,r4,#2
  626 00000374         ;                LDR      r5,[pc,#652]  ; @0x000016B0
  627 00000374 4DA2            LDR              r5,=Te+0*256*4
  628 00000376 592C            LDR              r4,[r5,r4]
  629 00000378 688D            LDR              r5,[r1,#0x08]
  630 0000037A 022D            LSLS             r5,r5,#8
  631 0000037C 0E2D            LSRS             r5,r5,#24
  632 0000037E 00AD            LSLS             r5,r5,#2
  633 00000380         ;                LDR      r6,[pc,#644]  ; @0x000016B4



ARM Macro Assembler    Page 12 


  634 00000380 4EA0            LDR              r6,=Te+1*256*4
  635 00000382 5975            LDR              r5,[r6,r5]
  636 00000384 406C            EORS             r4,r4,r5
  637 00000386 898D            LDRH             r5,[r1,#0x0C]
  638 00000388 042D            LSLS             r5,r5,#16
  639 0000038A 0E2D            LSRS             r5,r5,#24
  640 0000038C 00AD            LSLS             r5,r5,#2
  641 0000038E         ;                LDR      r6,[pc,#632]  ; @0x000016B8
  642 0000038E 4E9E            LDR              r6,=Te+2*256*4
  643 00000390 5975            LDR              r5,[r6,r5]
  644 00000392 406C            EORS             r4,r4,r5
  645 00000394 780D            LDRB             r5,[r1,#0x00]
  646 00000396 00AD            LSLS             r5,r5,#2
  647 00000398         ;                LDR      r6,[pc,#628]  ; @0x000016BC
  648 00000398 4E9C            LDR              r6,=Te+3*256*4
  649 0000039A 5975            LDR              r5,[r6,r5]
  650 0000039C 406C            EORS             r4,r4,r5
  651 0000039E 4623            MOV              r3,r4
  652 000003A0 6955            LDR              r5,[r2,#0x14]
  653 000003A2 406B            EORS             r3,r3,r5
  654 000003A4         ;58:         t2 = 
  655 000003A4         ;59:             Te[0][GETBYTE(s[2], 3)] ^ 
  656 000003A4         ;60:             Te[1][GETBYTE(s[3], 2)]  ^ 
  657 000003A4         ;61:             Te[2][GETBYTE(s[0], 1)]  ^ 
  658 000003A4         ;62:             Te[3][GETBYTE(s[1], 0)]  ^ 
  659 000003A4         ;63:             rk[6]; 
  660 000003A4 688C            LDR              r4,[r1,#0x08]
  661 000003A6 0E24            LSRS             r4,r4,#24
  662 000003A8 00A4            LSLS             r4,r4,#2
  663 000003AA         ;                LDR      r5,[pc,#596]  ; @0x000016B0
  664 000003AA 4D95            LDR              r5,=Te+0*256*4
  665 000003AC 592C            LDR              r4,[r5,r4]
  666 000003AE 68CD            LDR              r5,[r1,#0x0C]
  667 000003B0 022D            LSLS             r5,r5,#8
  668 000003B2 0E2D            LSRS             r5,r5,#24
  669 000003B4 00AD            LSLS             r5,r5,#2
  670 000003B6         ;                LDR      r6,[pc,#588]  ; @0x000016B4
  671 000003B6 4E93            LDR              r6,=Te+1*256*4
  672 000003B8 5975            LDR              r5,[r6,r5]
  673 000003BA 406C            EORS             r4,r4,r5
  674 000003BC 880D            LDRH             r5,[r1,#0x00]
  675 000003BE 042D            LSLS             r5,r5,#16
  676 000003C0 0E2D            LSRS             r5,r5,#24
  677 000003C2 00AD            LSLS             r5,r5,#2
  678 000003C4         ;                LDR      r6,[pc,#580]  ; @0x000016B8
  679 000003C4 4E90            LDR              r6,=Te+2*256*4
  680 000003C6 5975            LDR              r5,[r6,r5]
  681 000003C8 406C            EORS             r4,r4,r5
  682 000003CA 790D            LDRB             r5,[r1,#0x04]
  683 000003CC 00AD            LSLS             r5,r5,#2
  684 000003CE         ;                LDR      r6,[pc,#572]  ; @0x000016BC
  685 000003CE 4E8F            LDR              r6,=Te+3*256*4
  686 000003D0 5975            LDR              r5,[r6,r5]
  687 000003D2 406C            EORS             r4,r4,r5
  688 000003D4 6995            LDR              r5,[r2,#0x18]
  689 000003D6 406C            EORS             r4,r4,r5
  690 000003D8 9401            STR              r4,[sp,#0x04]
  691 000003DA         ;64:         t3 = 
  692 000003DA         ;65:             Te[0][GETBYTE(s[3], 3)] ^ 



ARM Macro Assembler    Page 13 


  693 000003DA         ;66:             Te[1][GETBYTE(s[0], 2)]  ^ 
  694 000003DA         ;67:             Te[2][GETBYTE(s[1], 1)]  ^ 
  695 000003DA         ;68:             Te[3][GETBYTE(s[2], 0)]  ^ 
  696 000003DA         ;69:             rk[7]; 
  697 000003DA         ;70:  
  698 000003DA 68CC            LDR              r4,[r1,#0x0C]
  699 000003DC 0E24            LSRS             r4,r4,#24
  700 000003DE 00A4            LSLS             r4,r4,#2
  701 000003E0         ;                LDR      r5,[pc,#544]  ; @0x000016B0
  702 000003E0 4D87            LDR              r5,=Te+0*256*4
  703 000003E2 592C            LDR              r4,[r5,r4]
  704 000003E4 680D            LDR              r5,[r1,#0x00]
  705 000003E6 022D            LSLS             r5,r5,#8
  706 000003E8 0E2D            LSRS             r5,r5,#24
  707 000003EA 00AD            LSLS             r5,r5,#2
  708 000003EC         ;                LDR      r6,[pc,#536]  ; @0x000016B4
  709 000003EC 4E85            LDR              r6,=Te+1*256*4
  710 000003EE 5975            LDR              r5,[r6,r5]
  711 000003F0 406C            EORS             r4,r4,r5
  712 000003F2 888D            LDRH             r5,[r1,#0x04]
  713 000003F4 042D            LSLS             r5,r5,#16
  714 000003F6 0E2D            LSRS             r5,r5,#24
  715 000003F8 00AD            LSLS             r5,r5,#2
  716 000003FA         ;                LDR      r6,[pc,#524]  ; @0x000016B8
  717 000003FA 4E83            LDR              r6,=Te+2*256*4
  718 000003FC 5975            LDR              r5,[r6,r5]
  719 000003FE 406C            EORS             r4,r4,r5
  720 00000400 7A0D            LDRB             r5,[r1,#0x08]
  721 00000402 00AD            LSLS             r5,r5,#2
  722 00000404         ;                LDR      r6,[pc,#520]  ; @0x000016BC
  723 00000404 4E81            LDR              r6,=Te+3*256*4
  724 00000406 5975            LDR              r5,[r6,r5]
  725 00000408 406C            EORS             r4,r4,r5
  726 0000040A 69D5            LDR              r5,[r2,#0x1C]
  727 0000040C 406C            EORS             r4,r4,r5
  728 0000040E 9400            STR              r4,[sp,#0x00]
  729 00000410         ;71:         rk += 8; 
  730 00000410 3220            ADDS             r2,r2,#0x20
  731 00000412         ;72:         if (--r == 0) { 
  732 00000412 9C02            LDR              r4,[sp,#0x08]
  733 00000414 1E64            SUBS             r4,r4,#1
  734 00000416 9402            STR              r4,[sp,#0x08]
  735 00000418 2C00            CMP              r4,#0x00
  736 0000041A D100            BNE              even_round2
  737 0000041C         ;73:             break; 
  738 0000041C         ;74:         } 
  739 0000041C         ;75:  
  740 0000041C E069            B                final_round2
  741 0000041E         even_round2
  742 0000041E         ;76:         s[0] = 
  743 0000041E         ;77:             Te[0][GETBYTE(t0, 3)] ^ 
  744 0000041E         ;78:             Te[1][GETBYTE(t1, 2)] ^ 
  745 0000041E         ;79:             Te[2][GETBYTE(t2, 1)] ^ 
  746 0000041E         ;80:             Te[3][GETBYTE(t3, 0)] ^ 
  747 0000041E         ;81:             rk[0]; 
  748 0000041E 0E04            LSRS             r4,r0,#24
  749 00000420 00A4            LSLS             r4,r4,#2
  750 00000422         ;                LDR      r5,[pc,#476]  ; @0x000016B0
  751 00000422 4D77            LDR              r5,=Te+0*256*4



ARM Macro Assembler    Page 14 


  752 00000424 592C            LDR              r4,[r5,r4]
  753 00000426 021D            LSLS             r5,r3,#8
  754 00000428 0E2D            LSRS             r5,r5,#24
  755 0000042A 00AD            LSLS             r5,r5,#2
  756 0000042C         ;                LDR      r6,[pc,#472]  ; @0x000016B4
  757 0000042C 4E75            LDR              r6,=Te+1*256*4
  758 0000042E 5975            LDR              r5,[r6,r5]
  759 00000430 406C            EORS             r4,r4,r5
  760 00000432 9D01            LDR              r5,[sp,#0x04]
  761 00000434 042D            LSLS             r5,r5,#16
  762 00000436 0E2D            LSRS             r5,r5,#24
  763 00000438 00AD            LSLS             r5,r5,#2
  764 0000043A         ;                LDR      r6,[pc,#460]  ; @0x000016B8
  765 0000043A 4E73            LDR              r6,=Te+2*256*4
  766 0000043C 5975            LDR              r5,[r6,r5]
  767 0000043E 406C            EORS             r4,r4,r5
  768 00000440 9D00            LDR              r5,[sp,#0x00]
  769 00000442 062D            LSLS             r5,r5,#24
  770 00000444 0DAD            LSRS             r5,r5,#22
  771 00000446         ;                LDR      r6,[pc,#452]  ; @0x000016BC
  772 00000446 4E71            LDR              r6,=Te+3*256*4
  773 00000448 5975            LDR              r5,[r6,r5]
  774 0000044A 406C            EORS             r4,r4,r5
  775 0000044C 6815            LDR              r5,[r2,#0x00]
  776 0000044E 406C            EORS             r4,r4,r5
  777 00000450 600C            STR              r4,[r1,#0x00]
  778 00000452         ;82:         s[1] = 
  779 00000452         ;83:             Te[0][GETBYTE(t1, 3)] ^ 
  780 00000452         ;84:             Te[1][GETBYTE(t2, 2)] ^ 
  781 00000452         ;85:             Te[2][GETBYTE(t3, 1)] ^ 
  782 00000452         ;86:             Te[3][GETBYTE(t0, 0)] ^ 
  783 00000452         ;87:             rk[1]; 
  784 00000452 0E1C            LSRS             r4,r3,#24
  785 00000454 00A4            LSLS             r4,r4,#2
  786 00000456         ;                LDR      r5,[pc,#424]  ; @0x000016B0
  787 00000456 4D6A            LDR              r5,=Te+0*256*4
  788 00000458 592C            LDR              r4,[r5,r4]
  789 0000045A 9D01            LDR              r5,[sp,#0x04]
  790 0000045C 022D            LSLS             r5,r5,#8
  791 0000045E 0E2D            LSRS             r5,r5,#24
  792 00000460 00AD            LSLS             r5,r5,#2
  793 00000462         ;                LDR      r6,[pc,#416]  ; @0x000016B4
  794 00000462 4E68            LDR              r6,=Te+1*256*4
  795 00000464 5975            LDR              r5,[r6,r5]
  796 00000466 406C            EORS             r4,r4,r5
  797 00000468 9D00            LDR              r5,[sp,#0x00]
  798 0000046A 042D            LSLS             r5,r5,#16
  799 0000046C 0E2D            LSRS             r5,r5,#24
  800 0000046E 00AD            LSLS             r5,r5,#2
  801 00000470         ;                LDR      r6,[pc,#408]  ; @0x000016B8
  802 00000470 4E65            LDR              r6,=Te+2*256*4
  803 00000472 5975            LDR              r5,[r6,r5]
  804 00000474 406C            EORS             r4,r4,r5
  805 00000476 0605            LSLS             r5,r0,#24
  806 00000478 0DAD            LSRS             r5,r5,#22
  807 0000047A         ;                LDR      r6,[pc,#400]  ; @0x000016BC
  808 0000047A 4E64            LDR              r6,=Te+3*256*4
  809 0000047C 5975            LDR              r5,[r6,r5]
  810 0000047E 406C            EORS             r4,r4,r5



ARM Macro Assembler    Page 15 


  811 00000480 6855            LDR              r5,[r2,#0x04]
  812 00000482 406C            EORS             r4,r4,r5
  813 00000484 604C            STR              r4,[r1,#0x04]
  814 00000486         ;88:         s[2] = 
  815 00000486         ;89:             Te[0][GETBYTE(t2, 3)] ^ 
  816 00000486         ;90:             Te[1][GETBYTE(t3, 2)] ^ 
  817 00000486         ;91:             Te[2][GETBYTE(t0, 1)] ^ 
  818 00000486         ;92:             Te[3][GETBYTE(t1, 0)] ^ 
  819 00000486         ;93:             rk[2]; 
  820 00000486 9C01            LDR              r4,[sp,#0x04]
  821 00000488 0E24            LSRS             r4,r4,#24
  822 0000048A 00A4            LSLS             r4,r4,#2
  823 0000048C         ;                LDR      r5,[pc,#372]  ; @0x000016B0
  824 0000048C 4D5C            LDR              r5,=Te+0*256*4
  825 0000048E 592C            LDR              r4,[r5,r4]
  826 00000490 9D00            LDR              r5,[sp,#0x00]
  827 00000492 022D            LSLS             r5,r5,#8
  828 00000494 0E2D            LSRS             r5,r5,#24
  829 00000496 00AD            LSLS             r5,r5,#2
  830 00000498         ;                LDR      r6,[pc,#364]  ; @0x000016B4
  831 00000498 4E5A            LDR              r6,=Te+1*256*4
  832 0000049A 5975            LDR              r5,[r6,r5]
  833 0000049C 406C            EORS             r4,r4,r5
  834 0000049E 0405            LSLS             r5,r0,#16
  835 000004A0 0E2D            LSRS             r5,r5,#24
  836 000004A2 00AD            LSLS             r5,r5,#2
  837 000004A4         ;                LDR      r6,[pc,#356]  ; @0x000016B8
  838 000004A4 4E58            LDR              r6,=Te+2*256*4
  839 000004A6 5975            LDR              r5,[r6,r5]
  840 000004A8 406C            EORS             r4,r4,r5
  841 000004AA 061D            LSLS             r5,r3,#24
  842 000004AC 0DAD            LSRS             r5,r5,#22
  843 000004AE         ;                LDR      r6,[pc,#348]  ; @0x000016BC
  844 000004AE 4E57            LDR              r6,=Te+3*256*4
  845 000004B0 5975            LDR              r5,[r6,r5]
  846 000004B2 406C            EORS             r4,r4,r5
  847 000004B4 6895            LDR              r5,[r2,#0x08]
  848 000004B6 406C            EORS             r4,r4,r5
  849 000004B8 608C            STR              r4,[r1,#0x08]
  850 000004BA         ;94:         s[3] = 
  851 000004BA         ;95:             Te[0][GETBYTE(t3, 3)] ^ 
  852 000004BA         ;96:             Te[1][GETBYTE(t0, 2)] ^ 
  853 000004BA         ;97:             Te[2][GETBYTE(t1, 1)] ^ 
  854 000004BA         ;98:             Te[3][GETBYTE(t2, 0)] ^ 
  855 000004BA         ;99:             rk[3]; 
  856 000004BA         ;00:     } 
  857 000004BA         ;01:                  
  858 000004BA         ;02:                     /* 
  859 000004BA         ;03:      * apply last round and 
  860 000004BA         ;04:      * map cipher state to byte array block: 
  861 000004BA         ;05:      */ 
  862 000004BA         ;06:  
  863 000004BA 9C00            LDR              r4,[sp,#0x00]
  864 000004BC 0E24            LSRS             r4,r4,#24
  865 000004BE 00A4            LSLS             r4,r4,#2
  866 000004C0         ;                LDR      r5,[pc,#320]  ; @0x000016B0
  867 000004C0 4D4F            LDR              r5,=Te+0*256*4
  868 000004C2 592C            LDR              r4,[r5,r4]
  869 000004C4 0205            LSLS             r5,r0,#8



ARM Macro Assembler    Page 16 


  870 000004C6 0E2D            LSRS             r5,r5,#24
  871 000004C8 00AD            LSLS             r5,r5,#2
  872 000004CA         ;                LDR      r6,[pc,#312]  ; @0x000016B4
  873 000004CA 4E4E            LDR              r6,=Te+1*256*4
  874 000004CC 5975            LDR              r5,[r6,r5]
  875 000004CE 406C            EORS             r4,r4,r5
  876 000004D0 041D            LSLS             r5,r3,#16
  877 000004D2 0E2D            LSRS             r5,r5,#24
  878 000004D4 00AD            LSLS             r5,r5,#2
  879 000004D6         ;                LDR      r6,[pc,#304]  ; @0x000016B8
  880 000004D6 4E4C            LDR              r6,=Te+2*256*4
  881 000004D8 5975            LDR              r5,[r6,r5]
  882 000004DA 406C            EORS             r4,r4,r5
  883 000004DC 9D01            LDR              r5,[sp,#0x04]
  884 000004DE 062D            LSLS             r5,r5,#24
  885 000004E0 0DAD            LSRS             r5,r5,#22
  886 000004E2         ;                LDR      r6,[pc,#296]  ; @0x000016BC
  887 000004E2 4E4A            LDR              r6,=Te+3*256*4
  888 000004E4 5975            LDR              r5,[r6,r5]
  889 000004E6 406C            EORS             r4,r4,r5
  890 000004E8 68D5            LDR              r5,[r2,#0x0C]
  891 000004EA 406C            EORS             r4,r4,r5
  892 000004EC 60CC            STR              r4,[r1,#0x0C]
  893 000004EE E725            B                odd_round2
  894 000004F0 BF00            NOP
  895 000004F2         final_round2
  896 000004F2         ;07:     s[0] = 
  897 000004F2         ;08:         (Te[4][GETBYTE(t0, 3)] & 0xff000000) ^ 
  898 000004F2         ;09:         (Te[4][GETBYTE(t1, 2)] & 0x00ff0000) ^ 
  899 000004F2         ;10:         (Te[4][GETBYTE(t2, 1)] & 0x0000ff00) ^ 
  900 000004F2         ;11:         (Te[4][GETBYTE(t3, 0)] & 0x000000ff) ^ 
  901 000004F2         ;12:         rk[0]; 
  902 000004F2 0E04            LSRS             r4,r0,#24
  903 000004F4 00A4            LSLS             r4,r4,#2
  904 000004F6         ;                LDR      r5,[pc,#280]  ; @0x000016C0
  905 000004F6 4D46            LDR              r5,=Te+4*256*4
  906 000004F8 592C            LDR              r4,[r5,r4]
  907 000004FA 0E24            LSRS             r4,r4,#24
  908 000004FC 0624            LSLS             r4,r4,#24
  909 000004FE 021D            LSLS             r5,r3,#8
  910 00000500 0E2D            LSRS             r5,r5,#24
  911 00000502 00AD            LSLS             r5,r5,#2
  912 00000504         ;                LDR      r6,[pc,#268]  ; @0x000016C0
  913 00000504 4E42            LDR              r6,=Te+4*256*4
  914 00000506 5975            LDR              r5,[r6,r5]
  915 00000508 26FF            MOVS             r6,#0xFF
  916 0000050A 0436            LSLS             r6,r6,#16
  917 0000050C 4035            ANDS             r5,r5,r6
  918 0000050E 406C            EORS             r4,r4,r5
  919 00000510 9D01            LDR              r5,[sp,#0x04]
  920 00000512 042D            LSLS             r5,r5,#16
  921 00000514 0E2D            LSRS             r5,r5,#24
  922 00000516 00AD            LSLS             r5,r5,#2
  923 00000518         ;                LDR      r6,[pc,#248]  ; @0x000016C0
  924 00000518 4E3D            LDR              r6,=Te+4*256*4
  925 0000051A 5975            LDR              r5,[r6,r5]
  926 0000051C 26FF            MOVS             r6,#0xFF
  927 0000051E 0236            LSLS             r6,r6,#8
  928 00000520 4035            ANDS             r5,r5,r6



ARM Macro Assembler    Page 17 


  929 00000522 406C            EORS             r4,r4,r5
  930 00000524 9D00            LDR              r5,[sp,#0x00]
  931 00000526 062D            LSLS             r5,r5,#24
  932 00000528 0DAD            LSRS             r5,r5,#22
  933 0000052A         ;                LDR      r6,[pc,#228]  ; @0x000016C0
  934 0000052A 4E39            LDR              r6,=Te+4*256*4
  935 0000052C 5D75            LDRB             r5,[r6,r5]
  936 0000052E 406C            EORS             r4,r4,r5
  937 00000530 6815            LDR              r5,[r2,#0x00]
  938 00000532 406C            EORS             r4,r4,r5
  939 00000534 600C            STR              r4,[r1,#0x00]
  940 00000536         ;13:     s[1] = 
  941 00000536         ;14:         (Te[4][GETBYTE(t1, 3)] & 0xff000000) ^ 
  942 00000536         ;15:         (Te[4][GETBYTE(t2, 2)] & 0x00ff0000) ^ 
  943 00000536         ;16:         (Te[4][GETBYTE(t3, 1)] & 0x0000ff00) ^ 
  944 00000536         ;17:         (Te[4][GETBYTE(t0, 0)] & 0x000000ff) ^ 
  945 00000536         ;18:         rk[1]; 
  946 00000536 0E1C            LSRS             r4,r3,#24
  947 00000538 00A4            LSLS             r4,r4,#2
  948 0000053A 4635            MOV              r5,r6
  949 0000053C 592C            LDR              r4,[r5,r4]
  950 0000053E 0E24            LSRS             r4,r4,#24
  951 00000540 0624            LSLS             r4,r4,#24
  952 00000542 9D01            LDR              r5,[sp,#0x04]
  953 00000544 022D            LSLS             r5,r5,#8
  954 00000546 0E2D            LSRS             r5,r5,#24
  955 00000548 00AD            LSLS             r5,r5,#2
  956 0000054A 5975            LDR              r5,[r6,r5]
  957 0000054C 26FF            MOVS             r6,#0xFF
  958 0000054E 0436            LSLS             r6,r6,#16
  959 00000550 4035            ANDS             r5,r5,r6
  960 00000552 406C            EORS             r4,r4,r5
  961 00000554 9D00            LDR              r5,[sp,#0x00]
  962 00000556 042D            LSLS             r5,r5,#16
  963 00000558 0E2D            LSRS             r5,r5,#24
  964 0000055A 00AD            LSLS             r5,r5,#2
  965 0000055C         ;                LDR      r6,[pc,#180]  ; @0x000016C0
  966 0000055C 4E2C            LDR              r6,=Te+4*256*4
  967 0000055E 5975            LDR              r5,[r6,r5]
  968 00000560 26FF            MOVS             r6,#0xFF
  969 00000562 0236            LSLS             r6,r6,#8
  970 00000564 4035            ANDS             r5,r5,r6
  971 00000566 406C            EORS             r4,r4,r5
  972 00000568 0605            LSLS             r5,r0,#24
  973 0000056A 0DAD            LSRS             r5,r5,#22
  974 0000056C         ;                LDR      r6,[pc,#164]  ; @0x000016C0
  975 0000056C 4E28            LDR              r6,=Te+4*256*4
  976 0000056E 5D75            LDRB             r5,[r6,r5]
  977 00000570 406C            EORS             r4,r4,r5
  978 00000572 6855            LDR              r5,[r2,#0x04]
  979 00000574 406C            EORS             r4,r4,r5
  980 00000576 604C            STR              r4,[r1,#0x04]
  981 00000578         ;19:     s[2] = 
  982 00000578         ;20:         (Te[4][GETBYTE(t2, 3)] & 0xff000000) ^ 
  983 00000578         ;21:         (Te[4][GETBYTE(t3, 2)] & 0x00ff0000) ^ 
  984 00000578         ;22:         (Te[4][GETBYTE(t0, 1)] & 0x0000ff00) ^ 
  985 00000578         ;23:         (Te[4][GETBYTE(t1, 0)] & 0x000000ff) ^ 
  986 00000578         ;24:         rk[2]; 
  987 00000578 9C01            LDR              r4,[sp,#0x04]



ARM Macro Assembler    Page 18 


  988 0000057A 0E24            LSRS             r4,r4,#24
  989 0000057C 00A4            LSLS             r4,r4,#2
  990 0000057E 4635            MOV              r5,r6
  991 00000580 592C            LDR              r4,[r5,r4]
  992 00000582 0E24            LSRS             r4,r4,#24
  993 00000584 0624            LSLS             r4,r4,#24
  994 00000586 9D00            LDR              r5,[sp,#0x00]
  995 00000588 022D            LSLS             r5,r5,#8
  996 0000058A 0E2D            LSRS             r5,r5,#24
  997 0000058C 00AD            LSLS             r5,r5,#2
  998 0000058E 5975            LDR              r5,[r6,r5]
  999 00000590 26FF            MOVS             r6,#0xFF
 1000 00000592 0436            LSLS             r6,r6,#16
 1001 00000594 4035            ANDS             r5,r5,r6
 1002 00000596 406C            EORS             r4,r4,r5
 1003 00000598 0405            LSLS             r5,r0,#16
 1004 0000059A 0E2D            LSRS             r5,r5,#24
 1005 0000059C 00AD            LSLS             r5,r5,#2
 1006 0000059E         ;                LDR      r6,[pc,#112]  ; @0x000016C0
 1007 0000059E 4E1C            LDR              r6,=Te+4*256*4
 1008 000005A0 5975            LDR              r5,[r6,r5]
 1009 000005A2 26FF            MOVS             r6,#0xFF
 1010 000005A4 0236            LSLS             r6,r6,#8
 1011 000005A6 4035            ANDS             r5,r5,r6
 1012 000005A8 406C            EORS             r4,r4,r5
 1013 000005AA 061D            LSLS             r5,r3,#24
 1014 000005AC 0DAD            LSRS             r5,r5,#22
 1015 000005AE         ;                LDR      r6,[pc,#96]  ; @0x000016C0
 1016 000005AE 4E18            LDR              r6,=Te+4*256*4
 1017 000005B0 5D75            LDRB             r5,[r6,r5]
 1018 000005B2 406C            EORS             r4,r4,r5
 1019 000005B4 6895            LDR              r5,[r2,#0x08]
 1020 000005B6 406C            EORS             r4,r4,r5
 1021 000005B8 608C            STR              r4,[r1,#0x08]
 1022 000005BA         ;25:     s[3] = 
 1023 000005BA         ;26:         (Te[4][GETBYTE(t3, 3)] & 0xff000000) ^ 
 1024 000005BA         ;27:         (Te[4][GETBYTE(t0, 2)] & 0x00ff0000) ^ 
 1025 000005BA         ;28:         (Te[4][GETBYTE(t1, 1)] & 0x0000ff00) ^ 
 1026 000005BA         ;29:         (Te[4][GETBYTE(t2, 0)] & 0x000000ff) ^ 
 1027 000005BA         ;30:         rk[3]; 
 1028 000005BA         ;31:  
 1029 000005BA 9C00            LDR              r4,[sp,#0x00]
 1030 000005BC 0E24            LSRS             r4,r4,#24
 1031 000005BE 00A4            LSLS             r4,r4,#2
 1032 000005C0 4635            MOV              r5,r6
 1033 000005C2 592C            LDR              r4,[r5,r4]
 1034 000005C4 0E24            LSRS             r4,r4,#24
 1035 000005C6 0624            LSLS             r4,r4,#24
 1036 000005C8 0205            LSLS             r5,r0,#8
 1037 000005CA 0E2D            LSRS             r5,r5,#24
 1038 000005CC 00AD            LSLS             r5,r5,#2
 1039 000005CE 5975            LDR              r5,[r6,r5]
 1040 000005D0 26FF            MOVS             r6,#0xFF
 1041 000005D2 0436            LSLS             r6,r6,#16
 1042 000005D4 4035            ANDS             r5,r5,r6
 1043 000005D6 406C            EORS             r4,r4,r5
 1044 000005D8 041D            LSLS             r5,r3,#16
 1045 000005DA 0E2D            LSRS             r5,r5,#24
 1046 000005DC 00AD            LSLS             r5,r5,#2



ARM Macro Assembler    Page 19 


 1047 000005DE         ;                LDR      r6,[pc,#48]  ; @0x000016C0
 1048 000005DE 4E0C            LDR              r6,=Te+4*256*4
 1049 000005E0 5975            LDR              r5,[r6,r5]
 1050 000005E2 26FF            MOVS             r6,#0xFF
 1051 000005E4 0236            LSLS             r6,r6,#8
 1052 000005E6 4035            ANDS             r5,r5,r6
 1053 000005E8 406C            EORS             r4,r4,r5
 1054 000005EA 9D01            LDR              r5,[sp,#0x04]
 1055 000005EC 062D            LSLS             r5,r5,#24
 1056 000005EE 0DAD            LSRS             r5,r5,#22
 1057 000005F0         ;                LDR      r6,[pc,#32]  ; @0x000016C0
 1058 000005F0 4E07            LDR              r6,=Te+4*256*4
 1059 000005F2 5D75            LDRB             r5,[r6,r5]
 1060 000005F4 406C            EORS             r4,r4,r5
 1061 000005F6 68D5            LDR              r5,[r2,#0x0C]
 1062 000005F8 406C            EORS             r4,r4,r5
 1063 000005FA 60CC            STR              r4,[r1,#0x0C]
 1064 000005FC         ;32: } 
 1065 000005FC B005            ADD              sp,sp,#0x14
 1066 000005FE BDF0            POP              {r4-r7,pc}
 1067 00000600                 ENDP
 1068 00000600         
 1069 00000600                 ALIGN
 1070 00000600         
 1071 00000600         
 1072 00000600                 END
              00000000 
              00000400 
              00000800 
              00000C00 
              00001000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\aes_core.d -o.\objects\aes_core.o -IC:\Users\sebastien\
Documents\dev\dac-rep\trunk\supervisor\supervisor\RTE -IC:\Keil_v5\ARM\PACK\ARM
\CMSIS\4.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\Device\ARM\ARM
CM0plus\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA
 515" --predefine="_RTE_ SETA 1" --predefine="ARMCM0P SETA 1" --list=.\listings
\aes_core.lst aes_core.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 4 in file aes_core.s
   Uses
      None
Comment: .text unused
aes_core_asm 00000000

Symbol: aes_core_asm
   Definitions
      At line 6 in file aes_core.s
   Uses
      At line 7 in file aes_core.s
Comment: aes_core_asm used once
aes_core_asm_opt 00000318

Symbol: aes_core_asm_opt
   Definitions
      At line 543 in file aes_core.s
   Uses
      At line 544 in file aes_core.s
Comment: aes_core_asm_opt used once
even_round 0000010C

Symbol: even_round
   Definitions
      At line 202 in file aes_core.s
   Uses
      At line 197 in file aes_core.s
Comment: even_round used once
even_round2 0000041E

Symbol: even_round2
   Definitions
      At line 741 in file aes_core.s
   Uses
      At line 736 in file aes_core.s
Comment: even_round2 used once
final_round 000001E0

Symbol: final_round
   Definitions
      At line 356 in file aes_core.s
   Uses
      At line 201 in file aes_core.s
Comment: final_round used once
final_round2 000004F2

Symbol: final_round2
   Definitions
      At line 895 in file aes_core.s
   Uses
      At line 740 in file aes_core.s
Comment: final_round2 used once
odd_round 00000024

Symbol: odd_round



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 38 in file aes_core.s
   Uses
      At line 354 in file aes_core.s
Comment: odd_round used once
odd_round2 0000033C

Symbol: odd_round2
   Definitions
      At line 575 in file aes_core.s
   Uses
      At line 893 in file aes_core.s
Comment: odd_round2 used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Te 00000000

Symbol: Te
   Definitions
      At line 8 in file aes_core.s
      At line 545 in file aes_core.s
   Uses
      At line 51 in file aes_core.s
      At line 58 in file aes_core.s
      At line 66 in file aes_core.s
      At line 72 in file aes_core.s
      At line 88 in file aes_core.s
      At line 95 in file aes_core.s
      At line 103 in file aes_core.s
      At line 109 in file aes_core.s
      At line 125 in file aes_core.s
      At line 132 in file aes_core.s
      At line 140 in file aes_core.s
      At line 146 in file aes_core.s
      At line 163 in file aes_core.s
      At line 170 in file aes_core.s
      At line 178 in file aes_core.s
      At line 184 in file aes_core.s
      At line 212 in file aes_core.s
      At line 218 in file aes_core.s
      At line 226 in file aes_core.s
      At line 233 in file aes_core.s
      At line 248 in file aes_core.s
      At line 255 in file aes_core.s
      At line 263 in file aes_core.s
      At line 269 in file aes_core.s
      At line 285 in file aes_core.s
      At line 292 in file aes_core.s
      At line 299 in file aes_core.s
      At line 305 in file aes_core.s
      At line 328 in file aes_core.s
      At line 334 in file aes_core.s
      At line 341 in file aes_core.s
      At line 348 in file aes_core.s
      At line 366 in file aes_core.s
      At line 374 in file aes_core.s
      At line 385 in file aes_core.s
      At line 395 in file aes_core.s
      At line 427 in file aes_core.s
      At line 436 in file aes_core.s
      At line 468 in file aes_core.s
      At line 477 in file aes_core.s
      At line 509 in file aes_core.s
      At line 519 in file aes_core.s
      At line 589 in file aes_core.s
      At line 597 in file aes_core.s
      At line 605 in file aes_core.s
      At line 611 in file aes_core.s
      At line 627 in file aes_core.s
      At line 634 in file aes_core.s
      At line 642 in file aes_core.s
      At line 648 in file aes_core.s
      At line 664 in file aes_core.s
      At line 671 in file aes_core.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 679 in file aes_core.s
      At line 685 in file aes_core.s
      At line 702 in file aes_core.s
      At line 709 in file aes_core.s
      At line 717 in file aes_core.s
      At line 723 in file aes_core.s
      At line 751 in file aes_core.s
      At line 757 in file aes_core.s
      At line 765 in file aes_core.s
      At line 772 in file aes_core.s
      At line 787 in file aes_core.s
      At line 794 in file aes_core.s
      At line 802 in file aes_core.s
      At line 808 in file aes_core.s
      At line 824 in file aes_core.s
      At line 831 in file aes_core.s
      At line 838 in file aes_core.s
      At line 844 in file aes_core.s
      At line 867 in file aes_core.s
      At line 873 in file aes_core.s
      At line 880 in file aes_core.s
      At line 887 in file aes_core.s
      At line 905 in file aes_core.s
      At line 913 in file aes_core.s
      At line 924 in file aes_core.s
      At line 934 in file aes_core.s
      At line 966 in file aes_core.s
      At line 975 in file aes_core.s
      At line 1007 in file aes_core.s
      At line 1016 in file aes_core.s
      At line 1048 in file aes_core.s
      At line 1058 in file aes_core.s
Warning: Te multiply defined
1 symbol
348 symbols in table
